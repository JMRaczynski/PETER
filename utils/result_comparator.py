def are_explanations_same(t1, t2):
    return t1.rindex(" ") == t2.rindex(" ") and t1[:t1.rindex(" ")] == t2[:t1.rindex(" ")]


def get_gt_line_numbers(line_numbers):
    return [line_numbers[line_no] + (1 - line_numbers[line_no] % 4) for line_no, ind in enumerate(line_numbers)]


def get_prediction_line_numbers(line_numbers):
    return [line_numbers[line_no] + (3 - line_numbers[line_no] % 4) for line_no, ind in enumerate(line_numbers)]


path_1 = "../peter/generatedmovies.txt"
path_2 = "../models/Yelp/generated_rating_input_yelp.txt"
# lines = [3925, 4693, 7149, 9078, 11035, 12562, 14346, 34326, 34981, 37277, 39921, 44606, 44658, 46009, 48642, 69129,  # Yelp
#          82865, 91174, 97331, 114029, 117077, 119503, 121053, 124225, 124777, 125803, 127114, 128113, 133939, 136942,
#          149245, 153041, 155530, 157689, 158262, 163897, 178349, 181025, 181745, 184153, 185062, 188695, 189814,
#          199450, 201367, 204070, 206341, 209345, 214221, 218153, 220513, 224401, 232221, 245097, 249433, 250187,
#          253623, 262353, 263265, 272563, 277686, 284121, 296174, 296669, 296686, 305259, 305929, 314570, 335459, 339765,
#          343515, 346353, 359643, 366238, 369143, 375611, 375915, 379179, 380106, 393315, 398398, 402610, 407854, 411783,
#          415862, 418957, 422517, 428837, 431257, 444805, 447517, 454359, 456226, 457893, 459962, 466393, 466945, 476899,
#          501217, 516165]

# lines = [1707, 1869, 2228, 4028, 6337, 6844, 8219, 8328, 9319, 14638, 15702, 20176, 20454, 20826, 21688, 22110, 22597,  # TA
#          22922, 23013, 23640, 23964, 24659, 25379, 26421, 26683, 27811, 28136, 29341, 30397, 30793,
#          30907, 31447, 33451, 35748, 37654, 39102, 39106, 39660, 40031, 44309, 45493, 46602, 47362,
#          47694, 48634, 51222, 51284, 55756, 55863, 60206, 60352, 62859, 64782, 66573, 66581, 66614,
#          70075, 70538, 74036, 74349, 75573, 76812, 78200, 78299, 80351, 81083, 81561, 81988, 88331,
#          89439, 90822, 92873, 93861, 96950, 99145, 99773, 100208, 101136, 102324, 103152, 103209, 103568,
#          103630, 104675, 107752, 109604, 111031, 114655, 115210, 115487, 117045, 117531, 117908, 119740,
#          121573, 122950, 124501, 125222, 125667, 127002]

lines = [1385, 2269, 6613, 6697, 10365, 11501, 16385, 20737, 22821, 23157, 23161, 27613, 30009, 34201, 37461, 38581,  # Movies
         40761, 41161, 41437, 43113, 45457, 46833, 47505, 47741, 51013, 52073, 55085, 56397, 58245, 59425, 62109, 64865,
         65333, 65941, 67905, 69553, 70729, 71129, 72049, 72257, 72941, 72957, 74773, 77297, 78505, 80329, 81973, 84497,
         87233, 89897, 90061, 93589, 94077, 94473, 94893, 96981, 98709, 99297, 99585, 101737, 102013, 102513, 102625,
         108337, 108449, 113593, 117457, 117641, 120353, 121029, 122361, 128045, 128581, 129885, 130065, 131913, 133477,
         133889, 136097, 138201, 140529, 142029, 142073, 142993, 144489, 150549, 151293, 155089, 157069, 157209, 159273,
         161113, 161237, 162265, 171017, 171465, 174289, 176157, 176189, 176329]

# lines = [161, 1317, 1485, 3001, 4561, 4849, 5665, 6029, 6033, 6469, 9017, 10085, 10185, 10481, 11137, 11169, 11217,  # Clothes
#          11425, 12569, 12749, 13109, 13401, 14241, 15133, 16025, 16525, 16793, 16841, 16853, 17069, 17205, 18529, 18905,
#          19185, 22617, 22969, 23117, 24505, 25053, 26297, 27437, 28349, 28573, 30085, 30205, 31505, 32425, 33793, 35373,
#          35645, 35953, 37317, 37725, 37737, 37769, 38673, 39085, 39377, 40345, 40425, 41489, 41641, 42633, 42749, 44373,
#          44761, 46229, 47789, 49525, 50809, 51753, 52633, 53505, 54233, 55861, 56085, 56257, 56733, 56781, 57485, 59745,
#          60301, 61009, 61469, 62929, 63221, 64093, 64849, 66525, 66665, 66685, 67965, 68921, 69281, 70481, 70589, 70957,
#          71101, 71493, 71565]

# gt_lines = get_gt_line_numbers(lines)
#
with open(path_1, "r") as f:
    no_tf = f.readlines()

for line in lines:
    print(f"{line} {''.join(no_tf[line - 1: line + 2])}")

# with open(path_2, "r") as f:
#     tf = f.readlines()
#
# counter = 0
# for line_no in lines:
#     if not are_explanations_same(no_tf[line_no - 1], tf[line_no - 1]):
#         counter += 1
#         print(line_no - 1, "\n", no_tf[line_no - 1], tf[line_no - 1], sep="")
#
# print(counter)

# for line_no in gt_lines:
#     print(round(float(no_tf[line_no - 1][-4:-1])))
